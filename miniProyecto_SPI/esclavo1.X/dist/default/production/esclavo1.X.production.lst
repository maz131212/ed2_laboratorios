

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Feb 19 08:19:07 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.20
    14                           ; Generated 12/02/2020 GMT
    15                           ; 
    16                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F887 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  0008                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000D                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001B                     	;# 
    78  001C                     	;# 
    79  001D                     	;# 
    80  001E                     	;# 
    81  001F                     	;# 
    82  0081                     	;# 
    83  0085                     	;# 
    84  0086                     	;# 
    85  0087                     	;# 
    86  0088                     	;# 
    87  0089                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  008E                     	;# 
    91  008F                     	;# 
    92  0090                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0094                     	;# 
    99  0095                     	;# 
   100  0096                     	;# 
   101  0097                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009A                     	;# 
   105  009B                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  009E                     	;# 
   109  009F                     	;# 
   110  0105                     	;# 
   111  0107                     	;# 
   112  0108                     	;# 
   113  0109                     	;# 
   114  010C                     	;# 
   115  010C                     	;# 
   116  010D                     	;# 
   117  010E                     	;# 
   118  010F                     	;# 
   119  0185                     	;# 
   120  0187                     	;# 
   121  0188                     	;# 
   122  0189                     	;# 
   123  018C                     	;# 
   124  018D                     	;# 
   125  0000                     	;# 
   126  0001                     	;# 
   127  0002                     	;# 
   128  0003                     	;# 
   129  0004                     	;# 
   130  0005                     	;# 
   131  0006                     	;# 
   132  0007                     	;# 
   133  0008                     	;# 
   134  0009                     	;# 
   135  000A                     	;# 
   136  000B                     	;# 
   137  000C                     	;# 
   138  000D                     	;# 
   139  000E                     	;# 
   140  000E                     	;# 
   141  000F                     	;# 
   142  0010                     	;# 
   143  0011                     	;# 
   144  0012                     	;# 
   145  0013                     	;# 
   146  0014                     	;# 
   147  0015                     	;# 
   148  0015                     	;# 
   149  0016                     	;# 
   150  0017                     	;# 
   151  0018                     	;# 
   152  0019                     	;# 
   153  001A                     	;# 
   154  001B                     	;# 
   155  001B                     	;# 
   156  001C                     	;# 
   157  001D                     	;# 
   158  001E                     	;# 
   159  001F                     	;# 
   160  0081                     	;# 
   161  0085                     	;# 
   162  0086                     	;# 
   163  0087                     	;# 
   164  0088                     	;# 
   165  0089                     	;# 
   166  008C                     	;# 
   167  008D                     	;# 
   168  008E                     	;# 
   169  008F                     	;# 
   170  0090                     	;# 
   171  0091                     	;# 
   172  0092                     	;# 
   173  0093                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0094                     	;# 
   177  0095                     	;# 
   178  0096                     	;# 
   179  0097                     	;# 
   180  0098                     	;# 
   181  0099                     	;# 
   182  009A                     	;# 
   183  009B                     	;# 
   184  009C                     	;# 
   185  009D                     	;# 
   186  009E                     	;# 
   187  009F                     	;# 
   188  0105                     	;# 
   189  0107                     	;# 
   190  0108                     	;# 
   191  0109                     	;# 
   192  010C                     	;# 
   193  010C                     	;# 
   194  010D                     	;# 
   195  010E                     	;# 
   196  010F                     	;# 
   197  0185                     	;# 
   198  0187                     	;# 
   199  0188                     	;# 
   200  0189                     	;# 
   201  018C                     	;# 
   202  018D                     	;# 
   203  001E                     _ADRESH	set	30
   204  000B                     _INTCONbits	set	11
   205  0007                     _PORTC	set	7
   206  0005                     _PORTA	set	5
   207  001F                     _ADCON0bits	set	31
   208  009F                     _ADCON1bits	set	159
   209  008C                     _PIE1bits	set	140
   210  0087                     _TRISC	set	135
   211  0085                     _TRISA	set	133
   212  0188                     _ANSEL	set	392
   213                           
   214                           	psect	cinit
   215  07FB                     start_initialization:	
   216                           ; #config settings
   217                           
   218  07FB                     __initialization:
   219                           
   220                           ; Clear objects allocated to COMMON
   221  07FB  01F0               	clrf	__pbssCOMMON& (0+127)
   222  07FC                     end_of_initialization:	
   223                           ;End of C runtime variable initialization code
   224                           
   225  07FC                     __end_of__initialization:
   226  07FC  0183               	clrf	3
   227  07FD  120A  118A  2FBB   	ljmp	_main	;jump to C main() function
   228                           
   229                           	psect	bssCOMMON
   230  0070                     __pbssCOMMON:
   231  0070                     _pot:
   232  0070                     	ds	1
   233                           
   234                           	psect	cstackCOMMON
   235  0071                     __pcstackCOMMON:
   236  0071                     ?_setup:
   237  0071                     ??_setup:	
   238                           ; 1 bytes @ 0x0
   239                           
   240  0071                     ?_leer:	
   241                           ; 1 bytes @ 0x0
   242                           
   243  0071                     ??_leer:	
   244                           ; 1 bytes @ 0x0
   245                           
   246  0071                     ?_main:	
   247                           ; 1 bytes @ 0x0
   248                           
   249                           
   250                           ; 1 bytes @ 0x0
   251  0071                     	ds	1
   252  0072                     ??_main:
   253                           
   254                           	psect	maintext
   255  07BB                     __pmaintext:	
   256                           ; 1 bytes @ 0x1
   257 ;;
   258 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   259 ;;
   260 ;; *************** function _main *****************
   261 ;; Defined at:
   262 ;;		line 69 in file "main.c"
   263 ;; Parameters:    Size  Location     Type
   264 ;;		None
   265 ;; Auto vars:     Size  Location     Type
   266 ;;		None
   267 ;; Return value:  Size  Location     Type
   268 ;;                  1    wreg      void 
   269 ;; Registers used:
   270 ;;		wreg, status,2, status,0, pclath, cstack
   271 ;; Tracked objects:
   272 ;;		On entry : B00/0
   273 ;;		On exit  : 0/0
   274 ;;		Unchanged: 0/0
   275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   276 ;;      Params:         0       0       0       0       0
   277 ;;      Locals:         0       0       0       0       0
   278 ;;      Temps:          0       0       0       0       0
   279 ;;      Totals:         0       0       0       0       0
   280 ;;Total ram usage:        0 bytes
   281 ;; Hardware stack levels required when called:    1
   282 ;; This function calls:
   283 ;;		_leer
   284 ;;		_setup
   285 ;; This function is called by:
   286 ;;		Startup code after reset
   287 ;; This function uses a non-reentrant model
   288 ;;
   289                           
   290                           
   291                           ;psect for function _main
   292  07BB                     _main:
   293  07BB                     l665:	
   294                           ;incstack = 0
   295                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   296                           
   297                           
   298                           ;main.c: 71:     setup();
   299  07BB  120A  118A  27CF  120A  118A  	fcall	_setup
   300  07C0                     l667:
   301                           
   302                           ;main.c: 79:         if (ADCON0bits.GO_DONE == 0){
   303  07C0  1283               	bcf	3,5	;RP0=0, select bank0
   304  07C1  1303               	bcf	3,6	;RP1=0, select bank0
   305  07C2  189F               	btfsc	31,1	;volatile
   306  07C3  2FC5               	goto	u11
   307  07C4  2FC6               	goto	u10
   308  07C5                     u11:
   309  07C5  2FC0               	goto	l667
   310  07C6                     u10:
   311  07C6                     l669:
   312                           
   313                           ;main.c: 80:             leer();
   314  07C6  120A  118A  27B1  120A  118A  	fcall	_leer
   315  07CB  2FC0               	goto	l667
   316  07CC  120A  118A  2800   	ljmp	start
   317  07CF                     __end_of_main:
   318                           
   319                           	psect	text1
   320  07CF                     __ptext1:	
   321 ;; *************** function _setup *****************
   322 ;; Defined at:
   323 ;;		line 93 in file "main.c"
   324 ;; Parameters:    Size  Location     Type
   325 ;;		None
   326 ;; Auto vars:     Size  Location     Type
   327 ;;		None
   328 ;; Return value:  Size  Location     Type
   329 ;;                  1    wreg      void 
   330 ;; Registers used:
   331 ;;		wreg, status,2, status,0
   332 ;; Tracked objects:
   333 ;;		On entry : 0/0
   334 ;;		On exit  : 0/0
   335 ;;		Unchanged: 0/0
   336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   337 ;;      Params:         0       0       0       0       0
   338 ;;      Locals:         0       0       0       0       0
   339 ;;      Temps:          0       0       0       0       0
   340 ;;      Totals:         0       0       0       0       0
   341 ;;Total ram usage:        0 bytes
   342 ;; Hardware stack levels used:    1
   343 ;; This function calls:
   344 ;;		Nothing
   345 ;; This function is called by:
   346 ;;		_main
   347 ;; This function uses a non-reentrant model
   348 ;;
   349                           
   350                           
   351                           ;psect for function _setup
   352  07CF                     _setup:
   353  07CF                     l633:	
   354                           ;incstack = 0
   355                           ; Regs used in _setup: [wreg+status,2+status,0]
   356                           
   357                           
   358                           ;main.c: 97:     ANSEL = 0b00000010;
   359  07CF  3002               	movlw	2
   360  07D0  1683               	bsf	3,5	;RP0=1, select bank3
   361  07D1  1703               	bsf	3,6	;RP1=1, select bank3
   362  07D2  0088               	movwf	8	;volatile
   363                           
   364                           ;main.c: 98:     TRISA = 0b00000010;
   365  07D3  3002               	movlw	2
   366  07D4  1683               	bsf	3,5	;RP0=1, select bank1
   367  07D5  1303               	bcf	3,6	;RP1=0, select bank1
   368  07D6  0085               	movwf	5	;volatile
   369  07D7                     l635:
   370                           
   371                           ;main.c: 99:     PORTA = 0;
   372  07D7  1283               	bcf	3,5	;RP0=0, select bank0
   373  07D8  1303               	bcf	3,6	;RP1=0, select bank0
   374  07D9  0185               	clrf	5	;volatile
   375  07DA                     l637:
   376                           
   377                           ;main.c: 100:     TRISC = 0;
   378  07DA  1683               	bsf	3,5	;RP0=1, select bank1
   379  07DB  1303               	bcf	3,6	;RP1=0, select bank1
   380  07DC  0187               	clrf	7	;volatile
   381  07DD                     l639:
   382                           
   383                           ;main.c: 101:     PORTC = 0;
   384  07DD  1283               	bcf	3,5	;RP0=0, select bank0
   385  07DE  1303               	bcf	3,6	;RP1=0, select bank0
   386  07DF  0187               	clrf	7	;volatile
   387  07E0                     l641:
   388                           
   389                           ;main.c: 104:     INTCONbits.GIE = 1;
   390  07E0  178B               	bsf	11,7	;volatile
   391  07E1                     l643:
   392                           
   393                           ;main.c: 105:     INTCONbits.PEIE = 1;
   394  07E1  170B               	bsf	11,6	;volatile
   395  07E2                     l645:
   396                           
   397                           ;main.c: 106:     PIE1bits.ADIE = 1;
   398  07E2  1683               	bsf	3,5	;RP0=1, select bank1
   399  07E3  1303               	bcf	3,6	;RP1=0, select bank1
   400  07E4  170C               	bsf	12,6	;volatile
   401  07E5                     l647:
   402                           
   403                           ;main.c: 109:     ADCON0bits.CHS = 1;
   404  07E5  1283               	bcf	3,5	;RP0=0, select bank0
   405  07E6  1303               	bcf	3,6	;RP1=0, select bank0
   406  07E7  081F               	movf	31,w	;volatile
   407  07E8  39C3               	andlw	-61
   408  07E9  3804               	iorlw	4
   409  07EA  009F               	movwf	31	;volatile
   410  07EB                     l649:
   411                           
   412                           ;main.c: 110:     ADCON1bits.VCFG0 = 0;
   413  07EB  1683               	bsf	3,5	;RP0=1, select bank1
   414  07EC  1303               	bcf	3,6	;RP1=0, select bank1
   415  07ED  121F               	bcf	31,4	;volatile
   416  07EE                     l651:
   417                           
   418                           ;main.c: 111:     ADCON1bits.VCFG1 = 0;
   419  07EE  129F               	bcf	31,5	;volatile
   420  07EF                     l653:
   421                           
   422                           ;main.c: 112:     ADCON0bits.ADCS = 3;
   423  07EF  30C0               	movlw	192
   424  07F0  1283               	bcf	3,5	;RP0=0, select bank0
   425  07F1  1303               	bcf	3,6	;RP1=0, select bank0
   426  07F2  049F               	iorwf	31,f	;volatile
   427  07F3                     l655:
   428                           
   429                           ;main.c: 113:     ADCON1bits.ADFM = 0;
   430  07F3  1683               	bsf	3,5	;RP0=1, select bank1
   431  07F4  1303               	bcf	3,6	;RP1=0, select bank1
   432  07F5  139F               	bcf	31,7	;volatile
   433  07F6                     l657:
   434                           
   435                           ;main.c: 114:     ADCON0bits.GO_DONE = 1;
   436  07F6  1283               	bcf	3,5	;RP0=0, select bank0
   437  07F7  1303               	bcf	3,6	;RP1=0, select bank0
   438  07F8  149F               	bsf	31,1	;volatile
   439  07F9                     l659:
   440                           
   441                           ;main.c: 115:     ADCON0bits.ADON = 1;
   442  07F9  141F               	bsf	31,0	;volatile
   443  07FA                     l38:
   444  07FA  0008               	return
   445  07FB                     __end_of_setup:
   446                           
   447                           	psect	text2
   448  07B1                     __ptext2:	
   449 ;; *************** function _leer *****************
   450 ;; Defined at:
   451 ;;		line 123 in file "main.c"
   452 ;; Parameters:    Size  Location     Type
   453 ;;		None
   454 ;; Auto vars:     Size  Location     Type
   455 ;;		None
   456 ;; Return value:  Size  Location     Type
   457 ;;                  1    wreg      void 
   458 ;; Registers used:
   459 ;;		wreg
   460 ;; Tracked objects:
   461 ;;		On entry : 0/0
   462 ;;		On exit  : 0/0
   463 ;;		Unchanged: 0/0
   464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   465 ;;      Params:         0       0       0       0       0
   466 ;;      Locals:         0       0       0       0       0
   467 ;;      Temps:          1       0       0       0       0
   468 ;;      Totals:         1       0       0       0       0
   469 ;;Total ram usage:        1 bytes
   470 ;; Hardware stack levels used:    1
   471 ;; This function calls:
   472 ;;		Nothing
   473 ;; This function is called by:
   474 ;;		_main
   475 ;; This function uses a non-reentrant model
   476 ;;
   477                           
   478                           
   479                           ;psect for function _leer
   480  07B1                     _leer:
   481  07B1                     l661:	
   482                           ;incstack = 0
   483                           ; Regs used in _leer: [wreg]
   484                           
   485                           
   486                           ;main.c: 124:     pot = ADRESH;
   487  07B1  1283               	bcf	3,5	;RP0=0, select bank0
   488  07B2  1303               	bcf	3,6	;RP1=0, select bank0
   489  07B3  081E               	movf	30,w	;volatile
   490  07B4  00F1               	movwf	??_leer
   491  07B5  0871               	movf	??_leer,w
   492  07B6  00F0               	movwf	_pot
   493                           
   494                           ;main.c: 125:     PORTC = pot;
   495  07B7  0870               	movf	_pot,w
   496  07B8  0087               	movwf	7	;volatile
   497  07B9                     l663:
   498                           
   499                           ;main.c: 126:     ADCON0bits.GO_DONE = 1;
   500  07B9  149F               	bsf	31,1	;volatile
   501  07BA                     l41:
   502  07BA  0008               	return
   503  07BB                     __end_of_leer:
   504  007E                     btemp	set	126	;btemp
   505  007E                     wtemp0	set	126
   506                           
   507                           	psect	config
   508                           
   509                           ;Config register CONFIG1 @ 0x2007
   510                           ;	Oscillator Selection bits
   511                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   512                           ;	Watchdog Timer Enable bit
   513                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   514                           ;	Power-up Timer Enable bit
   515                           ;	PWRTE = OFF, PWRT disabled
   516                           ;	RE3/MCLR pin function select bit
   517                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   518                           ;	Code Protection bit
   519                           ;	CP = OFF, Program memory code protection is disabled
   520                           ;	Data Code Protection bit
   521                           ;	CPD = OFF, Data memory code protection is disabled
   522                           ;	Brown Out Reset Selection bits
   523                           ;	BOREN = OFF, BOR disabled
   524                           ;	Internal External Switchover bit
   525                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   526                           ;	Fail-Safe Clock Monitor Enabled bit
   527                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   528                           ;	Low Voltage Programming Enable bit
   529                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   530                           ;	In-Circuit Debugger Mode bit
   531                           ;	DEBUG = 0x1, unprogrammed default
   532  2007                     	org	8199
   533  2007  20D4               	dw	8404
   534                           
   535                           ;Config register CONFIG2 @ 0x2008
   536                           ;	Brown-out Reset Selection bit
   537                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   538                           ;	Flash Program Memory Self Write Enable bits
   539                           ;	WRT = OFF, Write protection off
   540  2008                     	org	8200
   541  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      1       2
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_leer

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                               _leer
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _leer                                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _leer
   _setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      1       2       1       14.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       2       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       2      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Feb 19 08:19:07 2021

                     l41 07BA                       l38 07FA                       u10 07C6  
                     u11 07C5                      l641 07E0                      l633 07CF  
                    l651 07EE                      l643 07E1                      l635 07D7  
                    l661 07B1                      l653 07EF                      l645 07E2  
                    l637 07DA                      l663 07B9                      l655 07F3  
                    l647 07E5                      l639 07DD                      l657 07F6  
                    l649 07EB                      l665 07BB                      l659 07F9  
                    l667 07C0                      l669 07C6                      _pot 0070  
                   _main 07BB                     _leer 07B1                     btemp 007E  
                   start 0000                    ?_main 0071                    ?_leer 0071  
                  _ANSEL 0188                    _PORTA 0005                    _PORTC 0007  
                  _TRISA 0085                    _TRISC 0087                    _setup 07CF  
                  status 0003                    wtemp0 007E          __initialization 07FB  
           __end_of_main 07CF             __end_of_leer 07BB                   ??_main 0072  
                 ??_leer 0071                   _ADRESH 001E                   ?_setup 0071  
__end_of__initialization 07FC           __pcstackCOMMON 0071            __end_of_setup 07FB  
                ??_setup 0071               __pmaintext 07BB                  __ptext1 07CF  
                __ptext2 07B1     end_of_initialization 07FC      start_initialization 07FB  
            __pbssCOMMON 0070                ___latbits 0002           __size_of_setup 002C  
               _PIE1bits 008C               _ADCON0bits 001F               _ADCON1bits 009F  
          __size_of_main 0014            __size_of_leer 000A               _INTCONbits 000B  
